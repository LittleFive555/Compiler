S: MultiStatement | · $

// 语句
MultiStatement: Statement MultiStatement | Statement $

MultiStatementWithoutMacroIfStatement: StatementWithoutMacroIfStatement MultiStatementWithoutMacroIfStatement | StatementWithoutMacroIfStatement $

Statement: StatementWithoutMacroIfStatement | 
		   MacroIfStatement $
		   
StatementWithoutMacroIfStatement: ImportStatement |
								  VarAssignStatement |
								  AssignStatement |
								  SelfCalculate |
								  {PushScope} CodeBlock {PopScope} |
								  FunctionDefine |
								  FunctionDefineWithoutKeyWord |
								  FunctionCall |
								  IfStatement |     
								  ForStatement |     
								  ForeachStatement | 
								  WhileStatement | 
								  ClassStatement | 
								  ReturnStatement | 
								  BreakStatement | 
								  ContinueStatement | 
								  SwitchStatement | 
								  CaseStatement | 
								  DefaultStatement | 
								  TryStatement | 
								  ThrowStatement | 
								  AwaitStatement | 
								  AsyncStatement | 
								  Semicolon $


// 代码块(完善)
CodeBlock: LeftBrace MultiStatement RightBrace | 
		   LeftBrace RightBrace $
		   
		   
		   

Object: ObjectFirst |
		ObjectFirst CanAssignValue1 |
		ObjectFirst FunctionCall1 |
		Minus Object | 
		Not Object | 
		Negative Object |
		
		CanAssignValue AssignSymbol Value $
		
ObjectFirst: {AddSymbolUsage} Identifier |
			FunctionDefine |
			ClassStatement |
			Region |
			{PushScope} FunctionDefineParams Lambda CodeBlock {PopScope} | 
			Async {PushScope} FunctionDefineParams Lambda CodeBlock {PopScope} | 
			AsyncStatement |
			
			Null | 
			Boolean | 
			Number | 
			String | 
			
			New {AddSymbolUsage} Identifier FunctionCallParams | 
			
			ArrayObject | 
			MapObject | 
			AwaitStatement $
		
		

Region: LeftPar Value RightPar $



// 运算(完善)
Value: Operation0 $

// 三目运算符（目前是优先级最低，可能需要调整）
Operation0: Operation0 QuestionMark Operation1 Colon Operation1 | 
			Operation1 $

Operation1: Operation1 And Operation2 | 
			Operation1 Or Operation2 | 
			Operation2  $

Operation2: Operation2 InclusiveOr Operation3 | 
			Operation2 Combine Operation3 | 
			Operation2 XOR Operation3 | 
			Operation2 LShift Operation3 | 
			Operation2 RShift Operation3 | 
			Operation3 $

Operation3: Operation3 Equal Operation4 | 
			Operation3 NotEqual Operation4 | 
			Operation3 EqualReference Operation4 | 
			Operation3 NotEqualReference Operation4 | 
			Operation3 Greater Operation4 | 
			Operation3 GreaterOrEqual Operation4 | 
			Operation3 Less Operation4 | 
			Operation3 LessOrEqual Operation4 | 
			Operation4 $

Operation4: Operation4 Plus Operation5 | 
			Operation4 Minus Operation5 | 
			Operation5 $

Operation5: Operation5 Multiply Operation6 | 
			Operation5 Divide Operation6 | 
			Operation5 Modulo Operation6 | 
			Operation6  $

Operation6: Operation6 EmptyRet Object | 
			Object $

SelfCalculate: CanAssignValue DoublePlus |
			   CanAssignValue DoubleMinus |
			   DoublePlus CanAssignValue |
			   DoubleMinus CanAssignValue $


// 声明和赋值
VarAssignStatement: Var IdentifierList |
					Var IdentifierList AssignSymbol ValueList |
					Var LeftBrace IdentifierList RightBrace Assign Value $

IdentifierList: {AddSymbolDefinition} Identifier Comma IdentifierList | {AddSymbolDefinition} Identifier $

AssignStatement: CanAssignValueList AssignSymbol ValueList | GlobalVar CanAssignValueList AssignSymbol ValueList $

CanAssignValue: ObjectFirst | ObjectFirst CanAssignValue1 $

CanAssignValue1: IndexMember | 
				 PeriodMember | 
				 PeriodFunction CanAssignValue1 |
				 IndexMember CanAssignValue1 | 
				 PeriodMember CanAssignValue1 | 
				 FunctionCallParams CanAssignValue1 $

CanAssignValueList: CanAssignValue Comma CanAssignValueList | CanAssignValue $

AssignSymbol: Assign | PlusAssign | MinusAssign | MultiplyAssign | DivideAssign | ModuloAssign | CombineAssign | InclusiveOrAssign | XORAssign | ShrAssign | ShiAssign $
				 



// 函数定义(完善) 无function关键词和无标识符的，只能是lambda表达式
FunctionDefine: Function {AddSymbolDefinition} Identifier FunctionDefineParams {PushScope} CodeBlock {PopScope} | 
				Function String FunctionDefineParams {PushScope} CodeBlock {PopScope} | 
				Function FunctionDefineParams {PushScope} CodeBlock {PopScope} | 
				Function {PushScope} CodeBlock {PopScope} $
FunctionDefineWithoutKeyWord: {AddSymbolDefinition} Identifier FunctionDefineParams {PushScope} CodeBlock {PopScope} |
							  String FunctionDefineParams {PushScope} CodeBlock {PopScope} |
							  {AddSymbolDefinition} Identifier {PushScope} CodeBlock {PopScope} |
							  String {PushScope} CodeBlock {PopScope} $
FunctionDefineParams: LeftPar ParamList RightPar | 
					  LeftPar RightPar $
ParamList: {AddSymbolDefinition} Identifier Comma ParamList |
		   {AddSymbolDefinition} Identifier | 
		   Params {AddSymbolDefinition} Identifier $



// 函数调用
FunctionCallParams : LeftPar ValueList RightPar | LeftPar RightPar | QuestionMarkDot LeftPar ValueList RightPar | QuestionMarkDot LeftPar RightPar $

ValueList: Value | Value Comma | Value Params | Value Params Comma | Value Comma ValueList $

FunctionCall: ObjectFirst FunctionCall1 $

FunctionCall1: FunctionCallParams | 
			   FunctionCallParams FunctionCall1 |
			   PeriodFunction |
			   PeriodFunction FunctionCall1 |
			   PeriodMember FunctionCall1 | 
			   IndexMember FunctionCall1 $

PeriodMember: Period {AddSymbolUsage} Identifier | 
			  QuestionMarkDot {AddSymbolUsage} Identifier $
			  
PeriodFunction: Period {AddSymbolUsage} Identifier FunctionCallParams | 
				QuestionMarkDot {AddSymbolUsage} Identifier FunctionCallParams $

IndexMember: LeftBracket Value RightBracket |
			 QuestionMarkDot LeftBracket Value RightBracket $


// 布尔值(完善)
Boolean : True | False $



// if语句(完善)
IfStatement : If LeftPar Value RightPar {PushScope} CodeBlock {PopScope} |
			  If LeftPar Value RightPar {PushScope} CodeBlock {PopScope} Else {PushScope} CodeBlock {PopScope} |
			  If LeftPar Value RightPar {PushScope} CodeBlock {PopScope} ElseIfPart |
			  If LeftPar Value RightPar {PushScope} CodeBlock {PopScope} ElseIfPart Else {PushScope} CodeBlock {PopScope} $

ElseIfPart : ElseIf LeftPar Value RightPar {PushScope} CodeBlock {PopScope} ElseIfPart | 
			 ElseIf LeftPar Value RightPar {PushScope} CodeBlock {PopScope} $



// for语句 (存在间接左递归，会无法判断两种for，可能需要去除间接左递归，或者引入回溯)
ForStatement: For {PushScope} LeftPar ForPart {PopScope} $

ForPart: MultiStatement ForNormalPartTwo | 
		 ForNormalPartTwo | 
		 Var {AddSymbolDefinition} Identifier Assign Value Comma Value RightPar CodeBlock | 
		 {AddSymbolUsage} Identifier Assign Value Comma Value RightPar CodeBlock |
		 Var {AddSymbolDefinition} Identifier Assign Value Comma Value Comma Value RightPar CodeBlock | 
		 {AddSymbolUsage} Identifier Assign Value Comma Value Comma Value RightPar CodeBlock $

// for语句 for(;;)
ForNormalPartTwo: Semicolon Value ForNormalPartThree | Semicolon ForNormalPartThree $

ForNormalPartThree: Semicolon MultiStatement RightPar CodeBlock | Semicolon RightPar CodeBlock $



// foreach语句(完善)
ForeachStatement: Foreach {PushScope} LeftPar Var {AddSymbolDefinition} Identifier In Value RightPar CodeBlock {PopScope} | 
				  Foreach {PushScope} LeftPar {AddSymbolUsage} Identifier In Value RightPar CodeBlock {PopScope} $



// while语句(完善)
WhileStatement: While LeftPar Value RightPar {PushScope} CodeBlock {PopScope} $



// class定义(完善)
ClassStatement: Class {AddSymbolDefinition} Identifier Colon {AddSymbolUsage} Identifier {PushScope(2)} ClassContent {PopScope} | 
				Class {AddSymbolDefinition} String Colon {AddSymbolUsage} Identifier {PushScope(2)} ClassContent {PopScope} | 
				Class {AddSymbolDefinition} Identifier {PushScope(1)} ClassContent {PopScope} |
				Class {AddSymbolDefinition} String {PushScope(1)} ClassContent {PopScope} $

ClassContent: LeftBrace ClassMultiFunctionDefine RightBrace | LeftBrace RightBrace $

ClassMultiFunctionDefine: ClassFunctionDefine ClassMultiFunctionDefine | ClassFunctionDefine $

ClassFunctionDefine: AsyncStatement | 
					 Get {AddSymbolDefinition} Identifier {PushScope} FunctionDefineParams CodeBlock {PopScope} | 
					 Get String {PushScope} FunctionDefineParams CodeBlock {PopScope} | 
					 FunctionDefine | 
					 FunctionDefineWithoutKeyWord | 
					 Semicolon $



// return
ReturnStatement: Return | Return Value $



// break(完善)
BreakStatement: Break $



// continue(完善)
ContinueStatement: Continue $



// switch(完善)
SwitchStatement: Switch LeftPar Value RightPar {PushScope} CodeBlock {PopScope} $

CaseStatement: Case Value Colon $

DefaultStatement: Default Colon $



// 异常(完善)
TryStatement: Try {PushScope} CodeBlock {PopScope} Catch {PushScope} LeftPar {AddSymbolUsage} Identifier RightPar CodeBlock {PopScope} $

ThrowStatement: Throw Value $



// 异步(完善)
AwaitStatement: Await Value $
AsyncStatement: Async FunctionDefine $



// import
ImportStatement: Import String $



// 数组(完善)
ArrayObject: LeftBracket ArrayMultiObject RightBracket | LeftBracket RightBracket $

ArrayMultiObject: Value Comma ArrayMultiObject | Value Semicolon ArrayMultiObject | Value Comma | Value Semicolon | Value $


// map(完善)
MapObject: LeftBrace MultiMapAssignStatements RightBrace | LeftBrace RightBrace $

MapAssignObject : Assign Value | Colon Value $

MultiMapAssignStatements: {AddSymbolDefinition} Identifier MapAssignStatement1 | 
						  String MapAssignStatement1 | 
						  Number MapAssignStatement2 | 
						  Boolean MapAssignStatement2 | 
						  FunctionDefine MultiMapAssignStatements | 
						  Async FunctionDefine | 
						  Async FunctionDefineWithoutKeyWord | 
						  Comma MultiMapAssignStatements | 
						  Semicolon MultiMapAssignStatements |
						  · $

MapAssignStatement1: MapAssignObject MultiMapAssignStatements | 
					 {PushScope} FunctionDefineParams CodeBlock {PopScope} MultiMapAssignStatements | 
					 Comma MultiMapAssignStatements | 
					 Semicolon MultiMapAssignStatements $

MapAssignStatement2: MapAssignObject MultiMapAssignStatements | 
					 Comma MultiMapAssignStatements | 
					 Semicolon MultiMapAssignStatements $


// 宏
MacroIfStatement : MacroIf MacroDefineList MultiStatementWithoutMacroIfStatement MacroEndif |
				   MacroIf MacroDefineList MacroEndif |
				   MacroIf MacroDefineList MultiStatementWithoutMacroIfStatement MacroElse MultiStatementWithoutMacroIfStatement MacroEndif |
				   MacroIf MacroDefineList MacroElse MultiStatementWithoutMacroIfStatement MacroEndif |
				   MacroIf MacroDefineList MacroElse MacroEndif |
				   MacroIf MacroDefineList MultiStatementWithoutMacroIfStatement MacroElseIfPart MacroEndif |
				   MacroIf MacroDefineList MacroElseIfPart MacroEndif |
				   MacroIf MacroDefineList MultiStatementWithoutMacroIfStatement MacroElseIfPart MacroElse MultiStatementWithoutMacroIfStatement MacroEndif |
				   MacroIf MacroDefineList MacroElseIfPart MacroElse MultiStatementWithoutMacroIfStatement MacroEndif |
				   MacroIf MacroDefineList MacroElseIfPart MacroElse MacroEndif $

MacroElseIfPart : MacroElif MacroDefineList MultiStatementWithoutMacroIfStatement MacroElseIfPart | 
				  MacroElif MacroDefineList MultiStatementWithoutMacroIfStatement |
				  MacroElif MacroDefineList MacroElseIfPart | 
				  MacroElif MacroDefineList $
				  
MacroDefineList : {AddSymbolUsage} Identifier | 
				  Not {AddSymbolUsage} Identifier |
				  LeftPar MacroDefineList RightPar |
				  {AddSymbolUsage} Identifier And MacroDefineList | 
				  {AddSymbolUsage} Identifier Or MacroDefineList |
				  Not {AddSymbolUsage} Identifier And MacroDefineList | 
				  Not {AddSymbolUsage} Identifier Or MacroDefineList |
				  LeftPar MacroDefineList RightPar MacroDefineList $